@model DA.Models.ApprovalSetup

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var requestTypeList = ViewBag.requestTypeList as List<SelectListItem>;
    var ranks = new List<SelectListItem>();
    ranks.Add(new SelectListItem { Text = "C1", Value = "C1", Selected = true });
    ranks.Add(new SelectListItem { Text = "C2", Value = "C2" });
}


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @*<h4>ApprovalSetup</h4>*@
        <div class="row clearfix-custom" style="margin-top:5px;">
            <div class="form-header">
                <p class="header-title">
                    ApprovalSetup
                </p>

            </div>

        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ApprovalCount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApprovalCount, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.ApprovalCount, "", new { @class = "text-danger" })
            </div>
        </div>

      
        <div class="form-group">
            @Html.LabelFor(model => model.Rank, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.Rank, ranks, htmlAttributes:  new { @class = "form-control", @width = "300px" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.WithRequirements, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.WithRequirements)
                    @Html.ValidationMessageFor(model => model.WithRequirements, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WithException, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.WithException)
                    @Html.ValidationMessageFor(model => model.WithException, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.RequestType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RequestType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RequestType, "", new { @class = "text-danger" })
            </div>
        </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.RequestType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.RequestType, requestTypeList, htmlAttributes: new { @class = "form-control", @width = "300px" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
